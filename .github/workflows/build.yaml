name: Build Importer

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
      - release/v*

env:
  GO_VERSION: 1.16.2

jobs:
  build:
    name: Build and Test Importer
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Go mod download
        run: go mod download

      - name: Run Go Build
        run: go build ./cmd/importer
      - name: Run Go Test
        run: go test ./...

      - name: Run GoReleaser
        if: github.event_name != 'pull_request'
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
          workdir: ./cmd/importer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v2
        with:
          name: importer
          path: ./cmd/importer/dist/*

  build-for-windows:
    if: ${{ false }} # Disabling Windows build for now
    name: Build Importer Binary - Windows
    strategy:
      matrix:
        GOARCH:
          - amd64
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Go mod download
        run: go mod download

      - name: Build for Windows
        run: |
          GOOS=windows GOARCH=${{ matrix.GOARCH }} go build \
            -o importer-windows-${{ matrix.GOARCH }}.exe \
            ./cmd/importer/

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: importer-windows-${{ matrix.GOARCH }}.exe
          path: ./importer-windows-${{ matrix.GOARCH }}.exe
